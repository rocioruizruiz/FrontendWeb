{"ast":null,"code":"var _jsxFileName = \"/Users/rocioruizruiz/Documentos/Tercero/Frontend/Clase/StarWars/starwars/src/Components/films.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILMS = gql`\n    query getFilms{\n        allFilms{\n            films{\n            title\n            director\n            episodeID\n            releaseDate\n            }\n        }\n    }\n`;\n\nconst Films = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(FILMS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Films, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Films;\nexport default Films; // \n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["/Users/rocioruizruiz/Documentos/Tercero/Frontend/Clase/StarWars/starwars/src/Components/films.tsx"],"names":["useQuery","gql","FILMS","Films","loading","error","data"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,KAAK,GAAGD,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAcA,MAAME,KAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,KAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI;AAAA,cAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CARD;;GAAMH,K;UAC+BH,Q;;;KAD/BG,K;AAUN,eAAeA,KAAf,C,CAEA","sourcesContent":["import react, {FC} from 'react'\nimport { useQuery, gql } from '@apollo/client';\n\nconst FILMS = gql`\n    query getFilms{\n        allFilms{\n            films{\n            title\n            director\n            episodeID\n            releaseDate\n            }\n        }\n    }\n`;\n\n\nconst Films:FC = () => {\n    const { loading, error, data } = useQuery(FILMS);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    return(\n        <div>{data}</div>\n    );\n}\n\nexport default Films;\n\n// "]},"metadata":{},"sourceType":"module"}