{"ast":null,"code":"var _jsxFileName = \"/Users/rocioruizruiz/Documentos/Tercero/Frontend/Clase/StarWars/starwars/src/Components/films.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './films.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Films = () => {\n  _s();\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    axios.get('https://swapi.dev/api/films').then(response => setData(response.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loaded! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this), !data && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this), data && data.results.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Films, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = Films;\nexport default Films; // \n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["/Users/rocioruizruiz/Documentos/Tercero/Frontend/Clase/StarWars/starwars/src/Components/films.tsx"],"names":["useState","useEffect","axios","Films","data","setData","get","then","response","results","map","item","title"],"mappings":";;;AAAA,SAAmBA,QAAnB,EAA6BC,SAA7B,QAA6C,OAA7C;AAEA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAmC,OAAnC;;;AAwBA,MAAMC,KAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACbC,IAAAA,KAAK,CAACI,GAAN,CAAU,6BAAV,EACMC,IADN,CACaC,QAAQ,IAAIH,OAAO,CAACG,QAAQ,CAACJ,IAAV,CADhC;AAEH,GAHQ,EAGN,EAHM,CAAT;AAOA,sBACI;AAAA,eACMA,IAAI,iBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADf,EAEM,CAACA,IAAD,iBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFf,EAGKA,IAAI,IAAIA,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAmBC,IAAD,IAAgB;AACvC,0BACI;AAAA,+BACI;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANQ,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAzBD;;GAAMT,K;;KAAAA,K;AA2BN,eAAeA,KAAf,C,CAEA","sourcesContent":["import react, {FC, useState, useEffect} from 'react'\nimport { useQuery, gql } from '@apollo/client';\nimport './films.css'\nimport axios, {AxiosResponse} from 'axios'\n\n\ninterface IFilms {\n    results: IFilm[]\n}\n\ninterface IFilm {\n    characters: string[]\n    created: string\n    director: string\n    edited: string\n    episode_id: number\n    opening_crawl: string\n    planets: string[]\n    producer: string\n    release_date: string\n    species: string[]\n    starships: string[]\n    title: string\n    url: string\n    vehicles: string[]\n}\n\nconst Films:FC = () => {\n\n    const [data, setData] = useState<IFilms>();\n\n    useEffect( () => {\n        axios.get('https://swapi.dev/api/films')\n             .then( (response => setData(response.data)))\n    }, []);\n\n\n   \n    return(\n        <div>\n            { data &&  <p> Loaded! </p> }\n            { !data && <p> Loading... </p>}\n            {data && data.results.map( (item:IFilm) => {\n                return(\n                    <div>\n                        <h3>{item.title}</h3>\n                    </div>\n                );\n            })}\n        </div>\n        \n    );\n}\n\nexport default Films;\n\n// "]},"metadata":{},"sourceType":"module"}